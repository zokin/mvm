// Copyright (c) Tamas Csala

#ifndef OGLWRAP_ENUMS_PIXEL_DATA_INTERNAL_FORMAT_H_
#define OGLWRAP_ENUMS_PIXEL_DATA_INTERNAL_FORMAT_H_

#include "../config.h"

namespace OGLWRAP_NAMESPACE_NAME {
namespace enums {

enum class PixelDataInternalFormat : GLenum {
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_DEPTH_COMPONENT)
  kDepthComponent = GL_DEPTH_COMPONENT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_DEPTH_STENCIL)
  kDepthStencil = GL_DEPTH_STENCIL,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RED)
  kRed = GL_RED,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG)
  kRg = GL_RG,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB)
  kRgb = GL_RGB,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SRGB)
  kSrgb = GL_SRGB,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA)
  kRgba = GL_RGBA,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SRGB_ALPHA)
  kSrgbAlpha = GL_SRGB_ALPHA,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R8)
  kR8 = GL_R8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R8_SNORM)
  kR8Snorm = GL_R8_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R16)
  kR16 = GL_R16,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R16_SNORM)
  kR16Snorm = GL_R16_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG8)
  kRg8 = GL_RG8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG8_SNORM)
  kRg8Snorm = GL_RG8_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG16)
  kRg16 = GL_RG16,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG16_SNORM)
  kRg16Snorm = GL_RG16_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R3_G3_B2)
  kR3G3B2 = GL_R3_G3_B2,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB4)
  kRgb4 = GL_RGB4,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB5)
  kRgb5 = GL_RGB5,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB8)
  kRgb8 = GL_RGB8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB8_SNORM)
  kRgb8Snorm = GL_RGB8_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB10)
  kRgb10 = GL_RGB10,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB12)
  kRgb12 = GL_RGB12,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB16)
  kRgb16 = GL_RGB16,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB16_SNORM)
  kRgb16Snorm = GL_RGB16_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA2)
  kRgba2 = GL_RGBA2,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA4)
  kRgba4 = GL_RGBA4,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB5_A1)
  kRgb5A1 = GL_RGB5_A1,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA8)
  kRgba8 = GL_RGBA8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA8_SNORM)
  kRgba8Snorm = GL_RGBA8_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB10_A2)
  kRgb10A2 = GL_RGB10_A2,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB10_A2UI)
  kRgb10A2Ui = GL_RGB10_A2UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA12)
  kRgba12 = GL_RGBA12,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA16)
  kRgba16 = GL_RGBA16,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA16_SNORM)
  kRgba16Snorm = GL_RGBA16_SNORM,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SRGB8)
  kSrgb8 = GL_SRGB8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SRGB8_ALPHA8)
  kSrgb8Alpha8 = GL_SRGB8_ALPHA8,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R16F)
  kR16F = GL_R16F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG16F)
  kRg16F = GL_RG16F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB16F)
  kRgb16F = GL_RGB16F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA16F)
  kRgba16F = GL_RGBA16F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R32F)
  kR32F = GL_R32F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG32F)
  kRg32F = GL_RG32F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB32F)
  kRgb32F = GL_RGB32F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA32F)
  kRgba32F = GL_RGBA32F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R11F_G11F_B10F)
  kR11FG11FB10F = GL_R11F_G11F_B10F,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB9_E5)
  kRgb9E5 = GL_RGB9_E5,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R8I)
  kR8I = GL_R8I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R8UI)
  kR8Ui = GL_R8UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R16I)
  kR16I = GL_R16I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R16UI)
  kR16Ui = GL_R16UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R32I)
  kR32I = GL_R32I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_R32UI)
  kR32Ui = GL_R32UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG8I)
  kRg8I = GL_RG8I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG8UI)
  kRg8Ui = GL_RG8UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG16I)
  kRg16I = GL_RG16I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG16UI)
  kRg16Ui = GL_RG16UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG32I)
  kRg32I = GL_RG32I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RG32UI)
  kRg32Ui = GL_RG32UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB8I)
  kRgb8I = GL_RGB8I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB8UI)
  kRgb8Ui = GL_RGB8UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB16I)
  kRgb16I = GL_RGB16I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB16UI)
  kRgb16Ui = GL_RGB16UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB32I)
  kRgb32I = GL_RGB32I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGB32UI)
  kRgb32Ui = GL_RGB32UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA8I)
  kRgba8I = GL_RGBA8I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA8UI)
  kRgba8Ui = GL_RGBA8UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA16I)
  kRgba16I = GL_RGBA16I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA16UI)
  kRgba16Ui = GL_RGBA16UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA32I)
  kRgba32I = GL_RGBA32I,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_RGBA32UI)
  kRgba32Ui = GL_RGBA32UI,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RED)
  kCompressedRed = GL_COMPRESSED_RED,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RG)
  kCompressedRg = GL_COMPRESSED_RG,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RGB)
  kCompressedRgb = GL_COMPRESSED_RGB,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RGBA)
  kCompressedRgba = GL_COMPRESSED_RGBA,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_SRGB)
  kCompressedSrgb = GL_COMPRESSED_SRGB,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_SRGB_ALPHA)
  kCompressedSrgbAlpha = GL_COMPRESSED_SRGB_ALPHA,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RED_RGTC1)
  kCompressedRedRgtc1 = GL_COMPRESSED_RED_RGTC1,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_SIGNED_RED_RGTC1)
  kCompressedSignedRedRgtc1 = GL_COMPRESSED_SIGNED_RED_RGTC1,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_RG_RGTC2)
  kCompressedRgRgtc2 = GL_COMPRESSED_RG_RGTC2,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMPRESSED_SIGNED_RG_RGTC2)
  kCompressedSignedRgRgtc2 = GL_COMPRESSED_SIGNED_RG_RGTC2,
#endif
};

}  // namespace enums
using namespace enums;
}  // namespace oglwrap

#endif
